import{r as u,j as b,t as m}from"./app-CluCXHk5.js";function P(e,c,{checkForDefaultPrevented:t=!0}={}){return function(n){if(e?.(n),t===!1||!n.defaultPrevented)return c?.(n)}}function $(e,c){const t=u.createContext(c),i=s=>{const{children:r,...o}=s,f=u.useMemo(()=>o,Object.values(o));return b.jsx(t.Provider,{value:f,children:r})};i.displayName=e+"Provider";function n(s){const r=u.useContext(t);if(r)return r;if(c!==void 0)return c;throw new Error(`\`${s}\` must be used within \`${e}\``)}return[i,n]}function R(e,c=[]){let t=[];function i(s,r){const o=u.createContext(r),f=t.length;t=[...t,r];const d=a=>{const{scope:h,children:x,...v}=a,p=h?.[e]?.[f]||o,C=u.useMemo(()=>v,Object.values(v));return b.jsx(p.Provider,{value:C,children:x})};d.displayName=s+"Provider";function l(a,h){const x=h?.[e]?.[f]||o,v=u.useContext(x);if(v)return v;if(r!==void 0)return r;throw new Error(`\`${a}\` must be used within \`${s}\``)}return[d,l]}const n=()=>{const s=t.map(r=>u.createContext(r));return function(o){const f=o?.[e]||s;return u.useMemo(()=>({[`__scope${e}`]:{...o,[e]:f}}),[o,f])}};return n.scopeName=e,[i,w(n,...c)]}function w(...e){const c=e[0];if(e.length===1)return c;const t=()=>{const i=e.map(n=>({useScope:n(),scopeName:n.scopeName}));return function(s){const r=i.reduce((o,{useScope:f,scopeName:d})=>{const a=f(s)[`__scope${d}`];return{...o,...a}},{});return u.useMemo(()=>({[`__scope${c.scopeName}`]:r}),[r])}};return t.scopeName=c.scopeName,t}var S=globalThis?.document?u.useLayoutEffect:()=>{},E=m[" useInsertionEffect ".trim().toString()]||S;function j({prop:e,defaultProp:c,onChange:t=()=>{},caller:i}){const[n,s,r]=g({defaultProp:c,onChange:t}),o=e!==void 0,f=o?e:n;{const l=u.useRef(e!==void 0);u.useEffect(()=>{const a=l.current;a!==o&&console.warn(`${i} is changing from ${a?"controlled":"uncontrolled"} to ${o?"controlled":"uncontrolled"}. Components should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled value for the lifetime of the component.`),l.current=o},[o,i])}const d=u.useCallback(l=>{if(o){const a=y(l)?l(e):l;a!==e&&r.current?.(a)}else s(l)},[o,e,s,r]);return[f,d]}function g({defaultProp:e,onChange:c}){const[t,i]=u.useState(e),n=u.useRef(t),s=u.useRef(c);return E(()=>{s.current=c},[c]),u.useEffect(()=>{n.current!==t&&(s.current?.(t),n.current=t)},[t,n]),[t,i,s]}function y(e){return typeof e=="function"}function _(e){const[c,t]=u.useState(void 0);return S(()=>{if(e){t({width:e.offsetWidth,height:e.offsetHeight});const i=new ResizeObserver(n=>{if(!Array.isArray(n)||!n.length)return;const s=n[0];let r,o;if("borderBoxSize"in s){const f=s.borderBoxSize,d=Array.isArray(f)?f[0]:f;r=d.inlineSize,o=d.blockSize}else r=e.offsetWidth,o=e.offsetHeight;t({width:r,height:o})});return i.observe(e,{box:"border-box"}),()=>i.unobserve(e)}else t(void 0)},[e]),c}export{j as a,P as b,R as c,_ as d,$ as e,S as u};
